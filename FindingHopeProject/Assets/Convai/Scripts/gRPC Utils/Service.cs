// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Service {

  /// <summary>Holder for reflection information generated from service.proto</summary>
  public static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1zZXJ2aWNlLnByb3RvEgdzZXJ2aWNlIigKC0F1ZGlvQ29uZmlnEhkKEXNh",
            "bXBsZV9yYXRlX2hlcnR6GAEgASgFIocCCgxBY3Rpb25Db25maWcSDwoHYWN0",
            "aW9ucxgBIAMoCRIzCgpjaGFyYWN0ZXJzGAIgAygLMh8uc2VydmljZS5BY3Rp",
            "b25Db25maWcuQ2hhcmFjdGVyEi0KB29iamVjdHMYAyADKAsyHC5zZXJ2aWNl",
            "LkFjdGlvbkNvbmZpZy5PYmplY3QSFgoOY2xhc3NpZmljYXRpb24YBCABKAkS",
            "FQoNY29udGV4dF9sZXZlbBgFIAEoBRomCglDaGFyYWN0ZXISDAoEbmFtZRgB",
            "IAEoCRILCgNiaW8YAiABKAkaKwoGT2JqZWN0EgwKBG5hbWUYASABKAkSEwoL",
            "ZGVzY3JpcHRpb24YAiABKAkiYQoKU1RUUmVxdWVzdBIsCgxhdWRpb19jb25m",
            "aWcYASABKAsyFC5zZXJ2aWNlLkF1ZGlvQ29uZmlnSAASFQoLYXVkaW9fY2h1",
            "bmsYAiABKAxIAEIOCgxyZXF1ZXN0X3R5cGUiGwoLU1RUUmVzcG9uc2USDAoE",
            "dGV4dBgBIAEoCSLEAwoSR2V0UmVzcG9uc2VSZXF1ZXN0EkwKE2dldF9yZXNw",
            "b25zZV9jb25maWcYASABKAsyLS5zZXJ2aWNlLkdldFJlc3BvbnNlUmVxdWVz",
            "dC5HZXRSZXNwb25zZUNvbmZpZ0gAEkgKEWdldF9yZXNwb25zZV9kYXRhGAIg",
            "ASgLMisuc2VydmljZS5HZXRSZXNwb25zZVJlcXVlc3QuR2V0UmVzcG9uc2VE",
            "YXRhSAAauQEKEUdldFJlc3BvbnNlQ29uZmlnEhQKDGNoYXJhY3Rlcl9pZBgC",
            "IAEoCRIPCgdhcGlfa2V5GAMgASgJEhIKCnNlc3Npb25faWQYBCABKAkSKgoM",
            "YXVkaW9fY29uZmlnGAUgASgLMhQuc2VydmljZS5BdWRpb0NvbmZpZxIsCg1h",
            "Y3Rpb25fY29uZmlnGAYgASgLMhUuc2VydmljZS5BY3Rpb25Db25maWcSDwoH",
            "c3BlYWtlchgHIAEoCRpKCg9HZXRSZXNwb25zZURhdGESFAoKYXVkaW9fZGF0",
            "YRgBIAEoDEgAEhMKCXRleHRfZGF0YRgCIAEoCUgAQgwKCmlucHV0X3R5cGVC",
            "DgoMcmVxdWVzdF90eXBlIt0DChNHZXRSZXNwb25zZVJlc3BvbnNlEhIKCnNl",
            "c3Npb25faWQYASABKAkSRgoPYWN0aW9uX3Jlc3BvbnNlGAIgASgLMisuc2Vy",
            "dmljZS5HZXRSZXNwb25zZVJlc3BvbnNlLkFjdGlvblJlc3BvbnNlSAASRAoO",
            "YXVkaW9fcmVzcG9uc2UYAyABKAsyKi5zZXJ2aWNlLkdldFJlc3BvbnNlUmVz",
            "cG9uc2UuQXVkaW9SZXNwb25zZUgAEhMKCWRlYnVnX2xvZxgEIAEoCUgAEkEK",
            "CnVzZXJfcXVlcnkYBSABKAsyKy5zZXJ2aWNlLkdldFJlc3BvbnNlUmVzcG9u",
            "c2UuVXNlclRyYW5zY3JpcHRIABpiCg1BdWRpb1Jlc3BvbnNlEhIKCmF1ZGlv",
            "X2RhdGEYASABKAwSKgoMYXVkaW9fY29uZmlnGAIgASgLMhQuc2VydmljZS5B",
            "dWRpb0NvbmZpZxIRCgl0ZXh0X2RhdGEYAyABKAkaIAoOQWN0aW9uUmVzcG9u",
            "c2USDgoGYWN0aW9uGAEgASgJGjUKDlVzZXJUcmFuc2NyaXB0EhEKCXRleHRf",
            "ZGF0YRgBIAEoCRIQCghpc19maW5hbBgCIAEoCEIPCg1yZXNwb25zZV90eXBl",
            "IhwKDEhlbGxvUmVxdWVzdBIMCgRuYW1lGAEgASgJIiAKDUhlbGxvUmVzcG9u",
            "c2USDwoHbWVzc2FnZRgBIAEoCTKeAgoNQ29udmFpU2VydmljZRI4CgVIZWxs",
            "bxIVLnNlcnZpY2UuSGVsbG9SZXF1ZXN0GhYuc2VydmljZS5IZWxsb1Jlc3Bv",
            "bnNlIgASQgoLSGVsbG9TdHJlYW0SFS5zZXJ2aWNlLkhlbGxvUmVxdWVzdBoW",
            "LnNlcnZpY2UuSGVsbG9SZXNwb25zZSIAKAEwARI/CgxTcGVlY2hUb1RleHQS",
            "Ey5zZXJ2aWNlLlNUVFJlcXVlc3QaFC5zZXJ2aWNlLlNUVFJlc3BvbnNlIgAo",
            "ATABEk4KC0dldFJlc3BvbnNlEhsuc2VydmljZS5HZXRSZXNwb25zZVJlcXVl",
            "c3QaHC5zZXJ2aWNlLkdldFJlc3BvbnNlUmVzcG9uc2UiACgBMAFiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Service.AudioConfig), global::Service.AudioConfig.Parser, new[]{ "SampleRateHertz" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Service.ActionConfig), global::Service.ActionConfig.Parser, new[]{ "Actions", "Characters", "Objects", "Classification", "ContextLevel" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Service.ActionConfig.Types.Character), global::Service.ActionConfig.Types.Character.Parser, new[]{ "Name", "Bio" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Service.ActionConfig.Types.Object), global::Service.ActionConfig.Types.Object.Parser, new[]{ "Name", "Description" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Service.STTRequest), global::Service.STTRequest.Parser, new[]{ "AudioConfig", "AudioChunk" }, new[]{ "RequestType" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Service.STTResponse), global::Service.STTResponse.Parser, new[]{ "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Service.GetResponseRequest), global::Service.GetResponseRequest.Parser, new[]{ "GetResponseConfig", "GetResponseData" }, new[]{ "RequestType" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Service.GetResponseRequest.Types.GetResponseConfig), global::Service.GetResponseRequest.Types.GetResponseConfig.Parser, new[]{ "CharacterId", "ApiKey", "SessionId", "AudioConfig", "ActionConfig", "Speaker" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Service.GetResponseRequest.Types.GetResponseData), global::Service.GetResponseRequest.Types.GetResponseData.Parser, new[]{ "AudioData", "TextData" }, new[]{ "InputType" }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Service.GetResponseResponse), global::Service.GetResponseResponse.Parser, new[]{ "SessionId", "ActionResponse", "AudioResponse", "DebugLog", "UserQuery" }, new[]{ "ResponseType" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Service.GetResponseResponse.Types.AudioResponse), global::Service.GetResponseResponse.Types.AudioResponse.Parser, new[]{ "AudioData", "AudioConfig", "TextData" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Service.GetResponseResponse.Types.ActionResponse), global::Service.GetResponseResponse.Types.ActionResponse.Parser, new[]{ "Action" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Service.GetResponseResponse.Types.UserTranscript), global::Service.GetResponseResponse.Types.UserTranscript.Parser, new[]{ "TextData", "IsFinal" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Service.HelloRequest), global::Service.HelloRequest.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Service.HelloResponse), global::Service.HelloResponse.Parser, new[]{ "Message" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AudioConfig : pb::IMessage<AudioConfig> {
    private static readonly pb::MessageParser<AudioConfig> _parser = new pb::MessageParser<AudioConfig>(() => new AudioConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AudioConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Service.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioConfig(AudioConfig other) : this() {
      sampleRateHertz_ = other.sampleRateHertz_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AudioConfig Clone() {
      return new AudioConfig(this);
    }

    /// <summary>Field number for the "sample_rate_hertz" field.</summary>
    public const int SampleRateHertzFieldNumber = 1;
    private int sampleRateHertz_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SampleRateHertz {
      get { return sampleRateHertz_; }
      set {
        sampleRateHertz_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AudioConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AudioConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SampleRateHertz != other.SampleRateHertz) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SampleRateHertz != 0) hash ^= SampleRateHertz.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SampleRateHertz != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SampleRateHertz);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SampleRateHertz != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SampleRateHertz);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AudioConfig other) {
      if (other == null) {
        return;
      }
      if (other.SampleRateHertz != 0) {
        SampleRateHertz = other.SampleRateHertz;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SampleRateHertz = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActionConfig : pb::IMessage<ActionConfig> {
    private static readonly pb::MessageParser<ActionConfig> _parser = new pb::MessageParser<ActionConfig>(() => new ActionConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Service.ServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionConfig(ActionConfig other) : this() {
      actions_ = other.actions_.Clone();
      characters_ = other.characters_.Clone();
      objects_ = other.objects_.Clone();
      classification_ = other.classification_;
      contextLevel_ = other.contextLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionConfig Clone() {
      return new ActionConfig(this);
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_actions_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> actions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Actions {
      get { return actions_; }
    }

    /// <summary>Field number for the "characters" field.</summary>
    public const int CharactersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Service.ActionConfig.Types.Character> _repeated_characters_codec
        = pb::FieldCodec.ForMessage(18, global::Service.ActionConfig.Types.Character.Parser);
    private readonly pbc::RepeatedField<global::Service.ActionConfig.Types.Character> characters_ = new pbc::RepeatedField<global::Service.ActionConfig.Types.Character>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Service.ActionConfig.Types.Character> Characters {
      get { return characters_; }
    }

    /// <summary>Field number for the "objects" field.</summary>
    public const int ObjectsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Service.ActionConfig.Types.Object> _repeated_objects_codec
        = pb::FieldCodec.ForMessage(26, global::Service.ActionConfig.Types.Object.Parser);
    private readonly pbc::RepeatedField<global::Service.ActionConfig.Types.Object> objects_ = new pbc::RepeatedField<global::Service.ActionConfig.Types.Object>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Service.ActionConfig.Types.Object> Objects {
      get { return objects_; }
    }

    /// <summary>Field number for the "classification" field.</summary>
    public const int ClassificationFieldNumber = 4;
    private string classification_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Classification {
      get { return classification_; }
      set {
        classification_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "context_level" field.</summary>
    public const int ContextLevelFieldNumber = 5;
    private int contextLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContextLevel {
      get { return contextLevel_; }
      set {
        contextLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!actions_.Equals(other.actions_)) return false;
      if(!characters_.Equals(other.characters_)) return false;
      if(!objects_.Equals(other.objects_)) return false;
      if (Classification != other.Classification) return false;
      if (ContextLevel != other.ContextLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= actions_.GetHashCode();
      hash ^= characters_.GetHashCode();
      hash ^= objects_.GetHashCode();
      if (Classification.Length != 0) hash ^= Classification.GetHashCode();
      if (ContextLevel != 0) hash ^= ContextLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      actions_.WriteTo(output, _repeated_actions_codec);
      characters_.WriteTo(output, _repeated_characters_codec);
      objects_.WriteTo(output, _repeated_objects_codec);
      if (Classification.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Classification);
      }
      if (ContextLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ContextLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += actions_.CalculateSize(_repeated_actions_codec);
      size += characters_.CalculateSize(_repeated_characters_codec);
      size += objects_.CalculateSize(_repeated_objects_codec);
      if (Classification.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Classification);
      }
      if (ContextLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ContextLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionConfig other) {
      if (other == null) {
        return;
      }
      actions_.Add(other.actions_);
      characters_.Add(other.characters_);
      objects_.Add(other.objects_);
      if (other.Classification.Length != 0) {
        Classification = other.Classification;
      }
      if (other.ContextLevel != 0) {
        ContextLevel = other.ContextLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            actions_.AddEntriesFrom(input, _repeated_actions_codec);
            break;
          }
          case 18: {
            characters_.AddEntriesFrom(input, _repeated_characters_codec);
            break;
          }
          case 26: {
            objects_.AddEntriesFrom(input, _repeated_objects_codec);
            break;
          }
          case 34: {
            Classification = input.ReadString();
            break;
          }
          case 40: {
            ContextLevel = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ActionConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Character : pb::IMessage<Character> {
        private static readonly pb::MessageParser<Character> _parser = new pb::MessageParser<Character>(() => new Character());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Character> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Service.ActionConfig.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Character() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Character(Character other) : this() {
          name_ = other.name_;
          bio_ = other.bio_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Character Clone() {
          return new Character(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "bio" field.</summary>
        public const int BioFieldNumber = 2;
        private string bio_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Bio {
          get { return bio_; }
          set {
            bio_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Character);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Character other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Bio != other.Bio) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Bio.Length != 0) hash ^= Bio.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Bio.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Bio);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Bio.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Bio);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Character other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Bio.Length != 0) {
            Bio = other.Bio;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Bio = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Object : pb::IMessage<Object> {
        private static readonly pb::MessageParser<Object> _parser = new pb::MessageParser<Object>(() => new Object());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Object> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Service.ActionConfig.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Object() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Object(Object other) : this() {
          name_ = other.name_;
          description_ = other.description_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Object Clone() {
          return new Object(this);
        }

        /// <summary>Field number for the "name" field.</summary>
        public const int NameFieldNumber = 1;
        private string name_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Name {
          get { return name_; }
          set {
            name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "description" field.</summary>
        public const int DescriptionFieldNumber = 2;
        private string description_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Description {
          get { return description_; }
          set {
            description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Object);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Object other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Name != other.Name) return false;
          if (Description != other.Description) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Name.Length != 0) hash ^= Name.GetHashCode();
          if (Description.Length != 0) hash ^= Description.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Name.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Name);
          }
          if (Description.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Description);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Name.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
          }
          if (Description.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Object other) {
          if (other == null) {
            return;
          }
          if (other.Name.Length != 0) {
            Name = other.Name;
          }
          if (other.Description.Length != 0) {
            Description = other.Description;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Name = input.ReadString();
                break;
              }
              case 18: {
                Description = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class STTRequest : pb::IMessage<STTRequest> {
    private static readonly pb::MessageParser<STTRequest> _parser = new pb::MessageParser<STTRequest>(() => new STTRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<STTRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Service.ServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public STTRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public STTRequest(STTRequest other) : this() {
      switch (other.RequestTypeCase) {
        case RequestTypeOneofCase.AudioConfig:
          AudioConfig = other.AudioConfig.Clone();
          break;
        case RequestTypeOneofCase.AudioChunk:
          AudioChunk = other.AudioChunk;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public STTRequest Clone() {
      return new STTRequest(this);
    }

    /// <summary>Field number for the "audio_config" field.</summary>
    public const int AudioConfigFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Service.AudioConfig AudioConfig {
      get { return requestTypeCase_ == RequestTypeOneofCase.AudioConfig ? (global::Service.AudioConfig) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.AudioConfig;
      }
    }

    /// <summary>Field number for the "audio_chunk" field.</summary>
    public const int AudioChunkFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AudioChunk {
      get { return requestTypeCase_ == RequestTypeOneofCase.AudioChunk ? (pb::ByteString) requestType_ : pb::ByteString.Empty; }
      set {
        requestType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        requestTypeCase_ = RequestTypeOneofCase.AudioChunk;
      }
    }

    private object requestType_;
    /// <summary>Enum of possible cases for the "request_type" oneof.</summary>
    public enum RequestTypeOneofCase {
      None = 0,
      AudioConfig = 1,
      AudioChunk = 2,
    }
    private RequestTypeOneofCase requestTypeCase_ = RequestTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestTypeOneofCase RequestTypeCase {
      get { return requestTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestType() {
      requestTypeCase_ = RequestTypeOneofCase.None;
      requestType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as STTRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(STTRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AudioConfig, other.AudioConfig)) return false;
      if (AudioChunk != other.AudioChunk) return false;
      if (RequestTypeCase != other.RequestTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestTypeCase_ == RequestTypeOneofCase.AudioConfig) hash ^= AudioConfig.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.AudioChunk) hash ^= AudioChunk.GetHashCode();
      hash ^= (int) requestTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (requestTypeCase_ == RequestTypeOneofCase.AudioConfig) {
        output.WriteRawTag(10);
        output.WriteMessage(AudioConfig);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.AudioChunk) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioChunk);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestTypeCase_ == RequestTypeOneofCase.AudioConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioConfig);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.AudioChunk) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AudioChunk);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(STTRequest other) {
      if (other == null) {
        return;
      }
      switch (other.RequestTypeCase) {
        case RequestTypeOneofCase.AudioConfig:
          if (AudioConfig == null) {
            AudioConfig = new global::Service.AudioConfig();
          }
          AudioConfig.MergeFrom(other.AudioConfig);
          break;
        case RequestTypeOneofCase.AudioChunk:
          AudioChunk = other.AudioChunk;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Service.AudioConfig subBuilder = new global::Service.AudioConfig();
            if (requestTypeCase_ == RequestTypeOneofCase.AudioConfig) {
              subBuilder.MergeFrom(AudioConfig);
            }
            input.ReadMessage(subBuilder);
            AudioConfig = subBuilder;
            break;
          }
          case 18: {
            AudioChunk = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class STTResponse : pb::IMessage<STTResponse> {
    private static readonly pb::MessageParser<STTResponse> _parser = new pb::MessageParser<STTResponse>(() => new STTResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<STTResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Service.ServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public STTResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public STTResponse(STTResponse other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public STTResponse Clone() {
      return new STTResponse(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as STTResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(STTResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(STTResponse other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetResponseRequest : pb::IMessage<GetResponseRequest> {
    private static readonly pb::MessageParser<GetResponseRequest> _parser = new pb::MessageParser<GetResponseRequest>(() => new GetResponseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetResponseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Service.ServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponseRequest(GetResponseRequest other) : this() {
      switch (other.RequestTypeCase) {
        case RequestTypeOneofCase.GetResponseConfig:
          GetResponseConfig = other.GetResponseConfig.Clone();
          break;
        case RequestTypeOneofCase.GetResponseData:
          GetResponseData = other.GetResponseData.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponseRequest Clone() {
      return new GetResponseRequest(this);
    }

    /// <summary>Field number for the "get_response_config" field.</summary>
    public const int GetResponseConfigFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Service.GetResponseRequest.Types.GetResponseConfig GetResponseConfig {
      get { return requestTypeCase_ == RequestTypeOneofCase.GetResponseConfig ? (global::Service.GetResponseRequest.Types.GetResponseConfig) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.GetResponseConfig;
      }
    }

    /// <summary>Field number for the "get_response_data" field.</summary>
    public const int GetResponseDataFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Service.GetResponseRequest.Types.GetResponseData GetResponseData {
      get { return requestTypeCase_ == RequestTypeOneofCase.GetResponseData ? (global::Service.GetResponseRequest.Types.GetResponseData) requestType_ : null; }
      set {
        requestType_ = value;
        requestTypeCase_ = value == null ? RequestTypeOneofCase.None : RequestTypeOneofCase.GetResponseData;
      }
    }

    private object requestType_;
    /// <summary>Enum of possible cases for the "request_type" oneof.</summary>
    public enum RequestTypeOneofCase {
      None = 0,
      GetResponseConfig = 1,
      GetResponseData = 2,
    }
    private RequestTypeOneofCase requestTypeCase_ = RequestTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestTypeOneofCase RequestTypeCase {
      get { return requestTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestType() {
      requestTypeCase_ = RequestTypeOneofCase.None;
      requestType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetResponseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetResponseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GetResponseConfig, other.GetResponseConfig)) return false;
      if (!object.Equals(GetResponseData, other.GetResponseData)) return false;
      if (RequestTypeCase != other.RequestTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (requestTypeCase_ == RequestTypeOneofCase.GetResponseConfig) hash ^= GetResponseConfig.GetHashCode();
      if (requestTypeCase_ == RequestTypeOneofCase.GetResponseData) hash ^= GetResponseData.GetHashCode();
      hash ^= (int) requestTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (requestTypeCase_ == RequestTypeOneofCase.GetResponseConfig) {
        output.WriteRawTag(10);
        output.WriteMessage(GetResponseConfig);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.GetResponseData) {
        output.WriteRawTag(18);
        output.WriteMessage(GetResponseData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (requestTypeCase_ == RequestTypeOneofCase.GetResponseConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetResponseConfig);
      }
      if (requestTypeCase_ == RequestTypeOneofCase.GetResponseData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetResponseData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetResponseRequest other) {
      if (other == null) {
        return;
      }
      switch (other.RequestTypeCase) {
        case RequestTypeOneofCase.GetResponseConfig:
          if (GetResponseConfig == null) {
            GetResponseConfig = new global::Service.GetResponseRequest.Types.GetResponseConfig();
          }
          GetResponseConfig.MergeFrom(other.GetResponseConfig);
          break;
        case RequestTypeOneofCase.GetResponseData:
          if (GetResponseData == null) {
            GetResponseData = new global::Service.GetResponseRequest.Types.GetResponseData();
          }
          GetResponseData.MergeFrom(other.GetResponseData);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Service.GetResponseRequest.Types.GetResponseConfig subBuilder = new global::Service.GetResponseRequest.Types.GetResponseConfig();
            if (requestTypeCase_ == RequestTypeOneofCase.GetResponseConfig) {
              subBuilder.MergeFrom(GetResponseConfig);
            }
            input.ReadMessage(subBuilder);
            GetResponseConfig = subBuilder;
            break;
          }
          case 18: {
            global::Service.GetResponseRequest.Types.GetResponseData subBuilder = new global::Service.GetResponseRequest.Types.GetResponseData();
            if (requestTypeCase_ == RequestTypeOneofCase.GetResponseData) {
              subBuilder.MergeFrom(GetResponseData);
            }
            input.ReadMessage(subBuilder);
            GetResponseData = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetResponseRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class GetResponseConfig : pb::IMessage<GetResponseConfig> {
        private static readonly pb::MessageParser<GetResponseConfig> _parser = new pb::MessageParser<GetResponseConfig>(() => new GetResponseConfig());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GetResponseConfig> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Service.GetResponseRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetResponseConfig() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetResponseConfig(GetResponseConfig other) : this() {
          characterId_ = other.characterId_;
          apiKey_ = other.apiKey_;
          sessionId_ = other.sessionId_;
          audioConfig_ = other.audioConfig_ != null ? other.audioConfig_.Clone() : null;
          actionConfig_ = other.actionConfig_ != null ? other.actionConfig_.Clone() : null;
          speaker_ = other.speaker_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetResponseConfig Clone() {
          return new GetResponseConfig(this);
        }

        /// <summary>Field number for the "character_id" field.</summary>
        public const int CharacterIdFieldNumber = 2;
        private string characterId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string CharacterId {
          get { return characterId_; }
          set {
            characterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "api_key" field.</summary>
        public const int ApiKeyFieldNumber = 3;
        private string apiKey_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string ApiKey {
          get { return apiKey_; }
          set {
            apiKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "session_id" field.</summary>
        public const int SessionIdFieldNumber = 4;
        private string sessionId_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string SessionId {
          get { return sessionId_; }
          set {
            sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "audio_config" field.</summary>
        public const int AudioConfigFieldNumber = 5;
        private global::Service.AudioConfig audioConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Service.AudioConfig AudioConfig {
          get { return audioConfig_; }
          set {
            audioConfig_ = value;
          }
        }

        /// <summary>Field number for the "action_config" field.</summary>
        public const int ActionConfigFieldNumber = 6;
        private global::Service.ActionConfig actionConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Service.ActionConfig ActionConfig {
          get { return actionConfig_; }
          set {
            actionConfig_ = value;
          }
        }

        /// <summary>Field number for the "speaker" field.</summary>
        public const int SpeakerFieldNumber = 7;
        private string speaker_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Speaker {
          get { return speaker_; }
          set {
            speaker_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GetResponseConfig);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GetResponseConfig other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CharacterId != other.CharacterId) return false;
          if (ApiKey != other.ApiKey) return false;
          if (SessionId != other.SessionId) return false;
          if (!object.Equals(AudioConfig, other.AudioConfig)) return false;
          if (!object.Equals(ActionConfig, other.ActionConfig)) return false;
          if (Speaker != other.Speaker) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CharacterId.Length != 0) hash ^= CharacterId.GetHashCode();
          if (ApiKey.Length != 0) hash ^= ApiKey.GetHashCode();
          if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
          if (audioConfig_ != null) hash ^= AudioConfig.GetHashCode();
          if (actionConfig_ != null) hash ^= ActionConfig.GetHashCode();
          if (Speaker.Length != 0) hash ^= Speaker.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CharacterId.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(CharacterId);
          }
          if (ApiKey.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(ApiKey);
          }
          if (SessionId.Length != 0) {
            output.WriteRawTag(34);
            output.WriteString(SessionId);
          }
          if (audioConfig_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(AudioConfig);
          }
          if (actionConfig_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(ActionConfig);
          }
          if (Speaker.Length != 0) {
            output.WriteRawTag(58);
            output.WriteString(Speaker);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CharacterId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(CharacterId);
          }
          if (ApiKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(ApiKey);
          }
          if (SessionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
          }
          if (audioConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioConfig);
          }
          if (actionConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActionConfig);
          }
          if (Speaker.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Speaker);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GetResponseConfig other) {
          if (other == null) {
            return;
          }
          if (other.CharacterId.Length != 0) {
            CharacterId = other.CharacterId;
          }
          if (other.ApiKey.Length != 0) {
            ApiKey = other.ApiKey;
          }
          if (other.SessionId.Length != 0) {
            SessionId = other.SessionId;
          }
          if (other.audioConfig_ != null) {
            if (audioConfig_ == null) {
              AudioConfig = new global::Service.AudioConfig();
            }
            AudioConfig.MergeFrom(other.AudioConfig);
          }
          if (other.actionConfig_ != null) {
            if (actionConfig_ == null) {
              ActionConfig = new global::Service.ActionConfig();
            }
            ActionConfig.MergeFrom(other.ActionConfig);
          }
          if (other.Speaker.Length != 0) {
            Speaker = other.Speaker;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 18: {
                CharacterId = input.ReadString();
                break;
              }
              case 26: {
                ApiKey = input.ReadString();
                break;
              }
              case 34: {
                SessionId = input.ReadString();
                break;
              }
              case 42: {
                if (audioConfig_ == null) {
                  AudioConfig = new global::Service.AudioConfig();
                }
                input.ReadMessage(AudioConfig);
                break;
              }
              case 50: {
                if (actionConfig_ == null) {
                  ActionConfig = new global::Service.ActionConfig();
                }
                input.ReadMessage(ActionConfig);
                break;
              }
              case 58: {
                Speaker = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class GetResponseData : pb::IMessage<GetResponseData> {
        private static readonly pb::MessageParser<GetResponseData> _parser = new pb::MessageParser<GetResponseData>(() => new GetResponseData());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<GetResponseData> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Service.GetResponseRequest.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetResponseData() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetResponseData(GetResponseData other) : this() {
          switch (other.InputTypeCase) {
            case InputTypeOneofCase.AudioData:
              AudioData = other.AudioData;
              break;
            case InputTypeOneofCase.TextData:
              TextData = other.TextData;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public GetResponseData Clone() {
          return new GetResponseData(this);
        }

        /// <summary>Field number for the "audio_data" field.</summary>
        public const int AudioDataFieldNumber = 1;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString AudioData {
          get { return inputTypeCase_ == InputTypeOneofCase.AudioData ? (pb::ByteString) inputType_ : pb::ByteString.Empty; }
          set {
            inputType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            inputTypeCase_ = InputTypeOneofCase.AudioData;
          }
        }

        /// <summary>Field number for the "text_data" field.</summary>
        public const int TextDataFieldNumber = 2;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TextData {
          get { return inputTypeCase_ == InputTypeOneofCase.TextData ? (string) inputType_ : ""; }
          set {
            inputType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
            inputTypeCase_ = InputTypeOneofCase.TextData;
          }
        }

        private object inputType_;
        /// <summary>Enum of possible cases for the "input_type" oneof.</summary>
        public enum InputTypeOneofCase {
          None = 0,
          AudioData = 1,
          TextData = 2,
        }
        private InputTypeOneofCase inputTypeCase_ = InputTypeOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public InputTypeOneofCase InputTypeCase {
          get { return inputTypeCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearInputType() {
          inputTypeCase_ = InputTypeOneofCase.None;
          inputType_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as GetResponseData);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(GetResponseData other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AudioData != other.AudioData) return false;
          if (TextData != other.TextData) return false;
          if (InputTypeCase != other.InputTypeCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (inputTypeCase_ == InputTypeOneofCase.AudioData) hash ^= AudioData.GetHashCode();
          if (inputTypeCase_ == InputTypeOneofCase.TextData) hash ^= TextData.GetHashCode();
          hash ^= (int) inputTypeCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (inputTypeCase_ == InputTypeOneofCase.AudioData) {
            output.WriteRawTag(10);
            output.WriteBytes(AudioData);
          }
          if (inputTypeCase_ == InputTypeOneofCase.TextData) {
            output.WriteRawTag(18);
            output.WriteString(TextData);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (inputTypeCase_ == InputTypeOneofCase.AudioData) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(AudioData);
          }
          if (inputTypeCase_ == InputTypeOneofCase.TextData) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TextData);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(GetResponseData other) {
          if (other == null) {
            return;
          }
          switch (other.InputTypeCase) {
            case InputTypeOneofCase.AudioData:
              AudioData = other.AudioData;
              break;
            case InputTypeOneofCase.TextData:
              TextData = other.TextData;
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                AudioData = input.ReadBytes();
                break;
              }
              case 18: {
                TextData = input.ReadString();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class GetResponseResponse : pb::IMessage<GetResponseResponse> {
    private static readonly pb::MessageParser<GetResponseResponse> _parser = new pb::MessageParser<GetResponseResponse>(() => new GetResponseResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetResponseResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Service.ServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponseResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponseResponse(GetResponseResponse other) : this() {
      sessionId_ = other.sessionId_;
      switch (other.ResponseTypeCase) {
        case ResponseTypeOneofCase.ActionResponse:
          ActionResponse = other.ActionResponse.Clone();
          break;
        case ResponseTypeOneofCase.AudioResponse:
          AudioResponse = other.AudioResponse.Clone();
          break;
        case ResponseTypeOneofCase.DebugLog:
          DebugLog = other.DebugLog;
          break;
        case ResponseTypeOneofCase.UserQuery:
          UserQuery = other.UserQuery.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetResponseResponse Clone() {
      return new GetResponseResponse(this);
    }

    /// <summary>Field number for the "session_id" field.</summary>
    public const int SessionIdFieldNumber = 1;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "action_response" field.</summary>
    public const int ActionResponseFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Service.GetResponseResponse.Types.ActionResponse ActionResponse {
      get { return responseTypeCase_ == ResponseTypeOneofCase.ActionResponse ? (global::Service.GetResponseResponse.Types.ActionResponse) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.ActionResponse;
      }
    }

    /// <summary>Field number for the "audio_response" field.</summary>
    public const int AudioResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Service.GetResponseResponse.Types.AudioResponse AudioResponse {
      get { return responseTypeCase_ == ResponseTypeOneofCase.AudioResponse ? (global::Service.GetResponseResponse.Types.AudioResponse) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.AudioResponse;
      }
    }

    /// <summary>Field number for the "debug_log" field.</summary>
    public const int DebugLogFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DebugLog {
      get { return responseTypeCase_ == ResponseTypeOneofCase.DebugLog ? (string) responseType_ : ""; }
      set {
        responseType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        responseTypeCase_ = ResponseTypeOneofCase.DebugLog;
      }
    }

    /// <summary>Field number for the "user_query" field.</summary>
    public const int UserQueryFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Service.GetResponseResponse.Types.UserTranscript UserQuery {
      get { return responseTypeCase_ == ResponseTypeOneofCase.UserQuery ? (global::Service.GetResponseResponse.Types.UserTranscript) responseType_ : null; }
      set {
        responseType_ = value;
        responseTypeCase_ = value == null ? ResponseTypeOneofCase.None : ResponseTypeOneofCase.UserQuery;
      }
    }

    private object responseType_;
    /// <summary>Enum of possible cases for the "response_type" oneof.</summary>
    public enum ResponseTypeOneofCase {
      None = 0,
      ActionResponse = 2,
      AudioResponse = 3,
      DebugLog = 4,
      UserQuery = 5,
    }
    private ResponseTypeOneofCase responseTypeCase_ = ResponseTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseTypeOneofCase ResponseTypeCase {
      get { return responseTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponseType() {
      responseTypeCase_ = ResponseTypeOneofCase.None;
      responseType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetResponseResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetResponseResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SessionId != other.SessionId) return false;
      if (!object.Equals(ActionResponse, other.ActionResponse)) return false;
      if (!object.Equals(AudioResponse, other.AudioResponse)) return false;
      if (DebugLog != other.DebugLog) return false;
      if (!object.Equals(UserQuery, other.UserQuery)) return false;
      if (ResponseTypeCase != other.ResponseTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.ActionResponse) hash ^= ActionResponse.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.AudioResponse) hash ^= AudioResponse.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.DebugLog) hash ^= DebugLog.GetHashCode();
      if (responseTypeCase_ == ResponseTypeOneofCase.UserQuery) hash ^= UserQuery.GetHashCode();
      hash ^= (int) responseTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SessionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SessionId);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ActionResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(ActionResponse);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.AudioResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(AudioResponse);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.DebugLog) {
        output.WriteRawTag(34);
        output.WriteString(DebugLog);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.UserQuery) {
        output.WriteRawTag(42);
        output.WriteMessage(UserQuery);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.ActionResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActionResponse);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.AudioResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioResponse);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.DebugLog) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DebugLog);
      }
      if (responseTypeCase_ == ResponseTypeOneofCase.UserQuery) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserQuery);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetResponseResponse other) {
      if (other == null) {
        return;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      switch (other.ResponseTypeCase) {
        case ResponseTypeOneofCase.ActionResponse:
          if (ActionResponse == null) {
            ActionResponse = new global::Service.GetResponseResponse.Types.ActionResponse();
          }
          ActionResponse.MergeFrom(other.ActionResponse);
          break;
        case ResponseTypeOneofCase.AudioResponse:
          if (AudioResponse == null) {
            AudioResponse = new global::Service.GetResponseResponse.Types.AudioResponse();
          }
          AudioResponse.MergeFrom(other.AudioResponse);
          break;
        case ResponseTypeOneofCase.DebugLog:
          DebugLog = other.DebugLog;
          break;
        case ResponseTypeOneofCase.UserQuery:
          if (UserQuery == null) {
            UserQuery = new global::Service.GetResponseResponse.Types.UserTranscript();
          }
          UserQuery.MergeFrom(other.UserQuery);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SessionId = input.ReadString();
            break;
          }
          case 18: {
            global::Service.GetResponseResponse.Types.ActionResponse subBuilder = new global::Service.GetResponseResponse.Types.ActionResponse();
            if (responseTypeCase_ == ResponseTypeOneofCase.ActionResponse) {
              subBuilder.MergeFrom(ActionResponse);
            }
            input.ReadMessage(subBuilder);
            ActionResponse = subBuilder;
            break;
          }
          case 26: {
            global::Service.GetResponseResponse.Types.AudioResponse subBuilder = new global::Service.GetResponseResponse.Types.AudioResponse();
            if (responseTypeCase_ == ResponseTypeOneofCase.AudioResponse) {
              subBuilder.MergeFrom(AudioResponse);
            }
            input.ReadMessage(subBuilder);
            AudioResponse = subBuilder;
            break;
          }
          case 34: {
            DebugLog = input.ReadString();
            break;
          }
          case 42: {
            global::Service.GetResponseResponse.Types.UserTranscript subBuilder = new global::Service.GetResponseResponse.Types.UserTranscript();
            if (responseTypeCase_ == ResponseTypeOneofCase.UserQuery) {
              subBuilder.MergeFrom(UserQuery);
            }
            input.ReadMessage(subBuilder);
            UserQuery = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the GetResponseResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class AudioResponse : pb::IMessage<AudioResponse> {
        private static readonly pb::MessageParser<AudioResponse> _parser = new pb::MessageParser<AudioResponse>(() => new AudioResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AudioResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Service.GetResponseResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AudioResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AudioResponse(AudioResponse other) : this() {
          audioData_ = other.audioData_;
          audioConfig_ = other.audioConfig_ != null ? other.audioConfig_.Clone() : null;
          textData_ = other.textData_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AudioResponse Clone() {
          return new AudioResponse(this);
        }

        /// <summary>Field number for the "audio_data" field.</summary>
        public const int AudioDataFieldNumber = 1;
        private pb::ByteString audioData_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString AudioData {
          get { return audioData_; }
          set {
            audioData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "audio_config" field.</summary>
        public const int AudioConfigFieldNumber = 2;
        private global::Service.AudioConfig audioConfig_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Service.AudioConfig AudioConfig {
          get { return audioConfig_; }
          set {
            audioConfig_ = value;
          }
        }

        /// <summary>Field number for the "text_data" field.</summary>
        public const int TextDataFieldNumber = 3;
        private string textData_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TextData {
          get { return textData_; }
          set {
            textData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AudioResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AudioResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (AudioData != other.AudioData) return false;
          if (!object.Equals(AudioConfig, other.AudioConfig)) return false;
          if (TextData != other.TextData) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (AudioData.Length != 0) hash ^= AudioData.GetHashCode();
          if (audioConfig_ != null) hash ^= AudioConfig.GetHashCode();
          if (TextData.Length != 0) hash ^= TextData.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (AudioData.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(AudioData);
          }
          if (audioConfig_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(AudioConfig);
          }
          if (TextData.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(TextData);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (AudioData.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(AudioData);
          }
          if (audioConfig_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AudioConfig);
          }
          if (TextData.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TextData);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AudioResponse other) {
          if (other == null) {
            return;
          }
          if (other.AudioData.Length != 0) {
            AudioData = other.AudioData;
          }
          if (other.audioConfig_ != null) {
            if (audioConfig_ == null) {
              AudioConfig = new global::Service.AudioConfig();
            }
            AudioConfig.MergeFrom(other.AudioConfig);
          }
          if (other.TextData.Length != 0) {
            TextData = other.TextData;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                AudioData = input.ReadBytes();
                break;
              }
              case 18: {
                if (audioConfig_ == null) {
                  AudioConfig = new global::Service.AudioConfig();
                }
                input.ReadMessage(AudioConfig);
                break;
              }
              case 26: {
                TextData = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class ActionResponse : pb::IMessage<ActionResponse> {
        private static readonly pb::MessageParser<ActionResponse> _parser = new pb::MessageParser<ActionResponse>(() => new ActionResponse());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ActionResponse> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Service.GetResponseResponse.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ActionResponse() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ActionResponse(ActionResponse other) : this() {
          action_ = other.action_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ActionResponse Clone() {
          return new ActionResponse(this);
        }

        /// <summary>Field number for the "action" field.</summary>
        public const int ActionFieldNumber = 1;
        private string action_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Action {
          get { return action_; }
          set {
            action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ActionResponse);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ActionResponse other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Action != other.Action) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Action.Length != 0) hash ^= Action.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Action.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Action);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Action.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ActionResponse other) {
          if (other == null) {
            return;
          }
          if (other.Action.Length != 0) {
            Action = other.Action;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Action = input.ReadString();
                break;
              }
            }
          }
        }

      }

      public sealed partial class UserTranscript : pb::IMessage<UserTranscript> {
        private static readonly pb::MessageParser<UserTranscript> _parser = new pb::MessageParser<UserTranscript>(() => new UserTranscript());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<UserTranscript> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Service.GetResponseResponse.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserTranscript() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserTranscript(UserTranscript other) : this() {
          textData_ = other.textData_;
          isFinal_ = other.isFinal_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public UserTranscript Clone() {
          return new UserTranscript(this);
        }

        /// <summary>Field number for the "text_data" field.</summary>
        public const int TextDataFieldNumber = 1;
        private string textData_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string TextData {
          get { return textData_; }
          set {
            textData_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "is_final" field.</summary>
        public const int IsFinalFieldNumber = 2;
        private bool isFinal_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool IsFinal {
          get { return isFinal_; }
          set {
            isFinal_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as UserTranscript);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(UserTranscript other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TextData != other.TextData) return false;
          if (IsFinal != other.IsFinal) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TextData.Length != 0) hash ^= TextData.GetHashCode();
          if (IsFinal != false) hash ^= IsFinal.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TextData.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(TextData);
          }
          if (IsFinal != false) {
            output.WriteRawTag(16);
            output.WriteBool(IsFinal);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TextData.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(TextData);
          }
          if (IsFinal != false) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(UserTranscript other) {
          if (other == null) {
            return;
          }
          if (other.TextData.Length != 0) {
            TextData = other.TextData;
          }
          if (other.IsFinal != false) {
            IsFinal = other.IsFinal;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TextData = input.ReadString();
                break;
              }
              case 16: {
                IsFinal = input.ReadBool();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class HelloRequest : pb::IMessage<HelloRequest> {
    private static readonly pb::MessageParser<HelloRequest> _parser = new pb::MessageParser<HelloRequest>(() => new HelloRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Service.ServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloRequest(HelloRequest other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloRequest Clone() {
      return new HelloRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HelloResponse : pb::IMessage<HelloResponse> {
    private static readonly pb::MessageParser<HelloResponse> _parser = new pb::MessageParser<HelloResponse>(() => new HelloResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Service.ServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse(HelloResponse other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse Clone() {
      return new HelloResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloResponse other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
